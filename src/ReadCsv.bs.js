// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Fs = require("fs");
var Js_dict = require("bs-platform/lib/js/js_dict.js");
var Process = require("process");
var Papaparse = require("papaparse");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var Caml_array = require("bs-platform/lib/js/caml_array.js");

var Results = { };

function processCell(s) {
  var __x = s.replace(/\&/g, "&amp;");
  var __x$1 = __x.replace(/</g, "&lt;");
  var __x$2 = __x$1.replace(/>/g, "&gt;");
  return __x$2.replace(/\n/g, "</div><div>");
}

function createDefnList(headers, cells) {
  var helper = function (_acc, _n) {
    while(true) {
      var n = _n;
      var acc = _acc;
      if (n === headers.length) {
        return acc;
      } else {
        _n = n + 1 | 0;
        _acc = acc + ("<dt>" + (Caml_array.caml_array_get(headers, n) + ("</dt>\n<dd><div>" + (processCell(Caml_array.caml_array_get(cells, n)) + "</div></dd>\n"))));
        continue ;
      }
    };
  };
  return "<dl>" + (helper("", 0) + "</dl>\n\n");
}

var args = Process.argv;

var csvFile = args[args.length - 1 | 0];

var htmlFile = args[args.length - 2 | 0];

var allLines = Fs.readFileSync(csvFile, "utf8");

var parseData = Papaparse.parse(allLines).data;

var headers = Belt_Array.slice(parseData, 0, 1)[0];

var contentRows = Belt_Array.slice(parseData, 1, parseData.length - 1 | 0);

var info = Js_dict.fromList(/* :: */[
      /* tuple */[
        "email",
        Caml_array.caml_array_get(Caml_array.caml_array_get(contentRows, 0), 0)
      ],
      /* :: */[
        /* tuple */[
          "nom",
          Caml_array.caml_array_get(Caml_array.caml_array_get(contentRows, 0), 1)
        ],
        /* :: */[
          /* tuple */[
            "prenom",
            Caml_array.caml_array_get(Caml_array.caml_array_get(contentRows, 0), 2)
          ],
          /* :: */[
            /* tuple */[
              "amount",
              Caml_array.caml_array_get(Caml_array.caml_array_get(contentRows, 0), 3)
            ],
            /* [] */0
          ]
        ]
      ]
    ]);

var person = Js_dict.fromList(/* :: */[
      /* tuple */[
        "person",
        info
      ],
      /* [] */0
    ]);

var json = JSON.stringify(person);

Fs.writeFileSync(htmlFile, json, "utf8");

exports.Results = Results;
exports.processCell = processCell;
exports.createDefnList = createDefnList;
exports.args = args;
exports.csvFile = csvFile;
exports.htmlFile = htmlFile;
exports.allLines = allLines;
exports.parseData = parseData;
exports.headers = headers;
exports.contentRows = contentRows;
exports.info = info;
exports.person = person;
exports.json = json;
/* args Not a pure module */
